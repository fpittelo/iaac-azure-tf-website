name: Terraform Destroy with OIDC

on:
  workflow_dispatch:   # Allows manual trigger of the destroy action
  pull_request:
    branches:
      - dev            # Optional: Add conditions for when to trigger destroy

permissions:
  id-token: write
  contents: read

jobs:
  destroy:
    name: Destroy All Azure Resources With Terraform
    runs-on: ubuntu-latest
    environment: AZURE_SECRETS

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_wrapper: false

    - name: Login To Azure with OIDC
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    # Export environment variables for Terraform to authenticate as a Service Principal
    - name: Set Terraform Environment Variables for OIDC
      run: |
        echo "ARM_CLIENT_ID=${{ secrets.AZURE_CLIENT_ID }}" >> $GITHUB_ENV
        echo "ARM_TENANT_ID=${{ secrets.AZURE_TENANT_ID }}" >> $GITHUB_ENV
        echo "ARM_SUBSCRIPTION_ID=${{ secrets.AZURE_SUBSCRIPTION_ID }}" >> $GITHUB_ENV
        echo "ARM_USE_OIDC=true" >> $GITHUB_ENV
    
    - name: Initialize Terraform Init
      run: terraform init

    - name: Generate Terraform Plan Destroy
      run: terraform plan -destroy

    - name: Execute Terraform Destroy
      run: terraform destroy -auto-approve
