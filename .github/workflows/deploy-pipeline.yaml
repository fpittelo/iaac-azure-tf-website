name: Terraform Deployment with OIDC

on:
  push:
    branches:
      - dev  # Triggers on push to main branch

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    name: Deploy Azure Resources With Terraform
    runs-on: ubuntu-latest
    environment: AZURE
    #environment: AZURE_SECRETS

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_wrapper: false

    - name: Login To Azure with OIDC
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    # Export environment variables for Terraform to authenticate as a Service Principal
    - name: Set Terraform Environment Variables
      run: |
        echo "ARM_CLIENT_ID=${{ secrets.AZURE_CLIENT_ID }}" >> $GITHUB_ENV
        echo "ARM_TENANT_ID=${{ secrets.AZURE_TENANT_ID }}" >> $GITHUB_ENV
        echo "ARM_SUBSCRIPTION_ID=${{ secrets.AZURE_SUBSCRIPTION_ID }}" >> $GITHUB_ENV
        echo "ARM_USE_OIDC=true" >> $GITHUB_ENV
    
    - name: Initialize Terraform
      run: terraform init

    - name: Generate Terraform Deploy Plan
      run: terraform plan

    - name: Execute Terraform Apply
      if: github.ref == 'refs/heads/dev'
      run: terraform apply -auto-approve

  ###### Publish Website to Azure Web App

  publish:
    name: Publish Website Code to Azure Web App
    runs-on: ubuntu-latest
    needs: deploy  # This job runs only after 'deploy' job succeeds
    environment: AZURE

    steps:
    - name: Checkout website code
      uses: actions/checkout@v2
      with:
        repository: fpittelo/website  # Repository containing the website code
        path: website  # Path to place the checked-out code

    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ secrets.APP_SERVICE_NAME }}  # Set this to your App Service name
#       slot-name:  # Optional: specify slot if needed (e.g., dev, qa)
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}  # Requires publish profile secret

    - name: Deploy to Azure Web App Slot (QA)
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ secrets.APP_SERVICE_NAME }}  # Set this to your App Service name
        slot-name: qa  # Specify the slot to deploy to
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_QA }}  # Requires QA slot publish profile secret
    
    - name: Deploy to Azure Web App Slot (Dev)
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ secrets.APP_SERVICE_NAME }}  # Set this to your App Service name
        slot-name: dev  # Specify the slot to deploy to
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_DEV }}  # Requires QA slot publish profile secret
