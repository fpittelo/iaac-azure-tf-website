name: Deploy to Dev

on:
  push:
    branches:
      - dev

permissions:
  id-token: write  # Required for OIDC authentication
  contents: read   # Default permission for accessing the repo

jobs:
  # Step 1: Bootstrap Backend Resources (if not already done)
  bootstrap:
    runs-on: ubuntu-latest
    environment: dev #must match the federated credential "based on selection" \
    # and match Github Action Secrets name
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to Azure using OIDC
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}           # App Registration client ID
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}           # Tenant ID
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }} # Subscription ID

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
  
      - name: Terraform Init for Bootstrap
        working-directory: ./terraform
        run: terraform init
  
      - name: Terraform Apply for Bootstrap
        working-directory: ./terraform
        run: terraform apply -auto-approve

  # Step 2: Main Terraform Deployment
  deploy:
    runs-on: ubuntu-latest
    needs: bootstrap # Ensures this runs after the bootstrap job
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to Azure using OIDC
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}           # App Registration client ID
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}           # Tenant ID
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }} # Subscription ID

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        working-directory: ./terraform/main
        env:
          TF_VAR_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        run: |
          terraform init -var-file="dev.tfvars"

      - name: Terraform Apply
        working-directory: ./terraform/main
        env:
          TF_VAR_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        run: |
          terraform apply -var-file="dev.tfvars" -auto-approve
